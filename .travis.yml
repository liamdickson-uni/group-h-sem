language: java
addons:
  hosts:
  - db
env:
  global:
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1
services:
- docker
install:
- docker build -t database db/.
- docker run --rm -d -e MYSQL_ROOT_PASSWORD=example -p 33060:3306 database
- mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
before_script:
- mvn clean
jobs:
  include:
  - stage: unit tests
    install: skip
    jdk: oraclejdk11
    script: mvn test -Dtest=com.group.sem.AppTests
  - stage: integration tests
    jdk: oraclejdk11
    script: mvn test -Dtest=com.group.sem.AppIntegrationTest
  - stage: GitHub Release
    install: skip
    jdk: oraclejdk11
    script:
    - echo "Deploying to GitHub Releases"
    - mvn package -DskipTests=true -Dmaven.javadoc.skip=true
    before_deploy:
    - git config --local user.name "Tom McEachan"
    - git config --local user.email "tom.a.mceachan@outlook.com"
    - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y-%m-%d')-$(git log --format=%h -1)}
    - git tag $TRAVIS_TAG
    deploy:
      provider: releases
      api-key: "$GITHUB_OAUTH_TOKEN"
      file: "$TRAVIS_BUILD_DIR/target/groupHSemMethods.jar"
      cleanup: false
  - stage: Google Cloud Deploy
    install: skip
    jdk: oraclejdk11
    before_script:
      - if [ ! -d ${HOME}/google-cloud-sdk ]; then curl https://sdk.cloud.google.com
        | bash > /dev/null; fi
      - source $HOME/google-cloud-sdk/path.bash.inc
      - gcloud components install kubectl
      - gcloud version
      - gcloud auth activate-service-account --key-file client-secret.json
    script:
      - gcloud config set project group-h-database
      - gcloud config set compute/zone europe-west2-b
      - export PROJECT_ID="$(gcloud config get-value project -q)"
      - gcloud auth configure-docker
      - docker build -t gcr.io/${PROJECT_ID}/db db/.
      - docker push gcr.io/${PROJECT_ID}/db
      - gcloud container clusters create world-cluster --num-nodes=1
      - kubectl run world --image=gcr.io/${PROJECT_ID}/db --port 33060
      - kubectl expose deployment world --port=33060 --target-port=33060 --type=LoadBalancer
stages:
  - unit tests
  - name: GitHub Release
    if: branch = master
  - name: Google Cloud Deploy
after_success:
- bash <(curl -s https://codecov.io/bash)